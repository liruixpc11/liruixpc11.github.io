<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[哈哈爱护的吧地博客]]></title>
  <link href="http://liruixpc11.github.io/atom.xml" rel="self"/>
  <link href="http://liruixpc11.github.io/"/>
  <updated>2016-03-12T21:44:02+08:00</updated>
  <id>http://liruixpc11.github.io/</id>
  <author>
    <name><![CDATA[哈哈爱护的吧]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Docker学习01]]></title>
    <link href="http://liruixpc11.github.io/blog/2016/03/12/docker-study-01/"/>
    <updated>2016-03-12T20:19:16+08:00</updated>
    <id>http://liruixpc11.github.io/blog/2016/03/12/docker-study-01</id>
    <content type="html"><![CDATA[<h1>Docker基本情况</h1>

<h2>隔离</h2>

<ul>
<li>文件系统</li>
<li>进程</li>
<li>网络</li>
<li>资源隔离与分组，通过cgroups</li>
</ul>


<h2>数据卷</h2>

<p>可以方便的用于文件共享；只读挂载可以方便的放置 <strong>FLAG</strong>。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker run -v /data:/datavolume:ro</span></code></pre></td></tr></table></div></figure>


<p>数据卷容器可以方便地实现多个容器之间的数据共享。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker run --volumes-from CNAME</span></code></pre></td></tr></table></div></figure>


<h2>常用命令</h2>

<h3>容器控制</h3>

<ul>
<li>docker run：运行</li>
<li>Ctrl-P Ctrl-Q： 退出挂载</li>
<li>docker attach：挂载</li>
<li>docker start：启动容器，可以使用 <strong>-i</strong> 选项</li>
<li>docker exec：在运行的容器中执行命令</li>
<li>docker stop：停止容器，实际就是发送Ctrl-C</li>
<li>docker kill：停止容器，直接终止进程</li>
</ul>


<h2>实例</h2>

<h3>创建Web站点</h3>

<p>创建导出80端口的容器：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>docker run -p <span class="m">80</span> --name web -it ubuntu /bin/bash
</span></code></pre></td></tr></table></div></figure>


<p>安装nginx、vim；编辑nginx配置；创建网页文件；运行nginx。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['学习OctoPress]]></title>
    <link href="http://liruixpc11.github.io/blog/2016/03/12/first-post/"/>
    <updated>2016-03-12T09:37:52+08:00</updated>
    <id>http://liruixpc11.github.io/blog/2016/03/12/first-post</id>
    <content type="html"><![CDATA[<h1>学习OctoPress搭建博客</h1>

<h2>一些小问题</h2>

<ol>
<li>修改Gemfile，修改source为 <code>https://ruby.taobao.com</code></li>
</ol>


<h2>一些例子</h2>

<figure class='code'><figcaption><span>This is a java demo</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;hello, world&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
